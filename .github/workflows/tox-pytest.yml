name: tox-pytest

on: [ push, pull_request ]

jobs:
  ci-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2.4.0
      with:
        fetch-depth: 2

    - name: Set up conda environment for testing
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true
        python-version: ${{ matrix.python-version }}
        activate-environment: pudl-rmi
        environment-file: environment.yml

    - name: Log the conda environment
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
        printenv | sort

    - name: Cache PUDL DB
      uses: actions/cache@v3.0.2
      with:
        path: ~/pudl-work/sqlite/pudl.sqlite
        # The last time we deployed Datasette. Update if we redeploy.
        key: "2021-11-12"

    - name: Download PUDL DB and log pre-test PUDL workspace contents
      run: |
        mkdir -p ~/pudl-work/sqlite/
        if [ ! -f ~/pudl-work/sqlite/pudl.sqlite ]
        then curl -o ~/pudl-work/sqlite/pudl.sqlite https://data.catalyst.coop/pudl.db
        fi
        find ~/pudl-work/

    - name: Log SQLite3 version
      run: |
        conda run -n pudl-rmi which sqlite3
        conda run -n pudl-rmi sqlite3 --version

    - name: Run pytest using Tox
      env:
        API_KEY_EIA: ${{ secrets.API_KEY_EIA }}
      run: |
        conda run -n pudl-rmi tox

    - name: Log post-test PUDL workspace contents
      run: find ~/pudl-work/

    - name: Upload test coverage report to CodeCov
      uses: codecov/codecov-action@v3.1.0
      with:
        verbose: true
        files: ./coverage.xml

  ci-notify:
    runs-on: ubuntu-latest
    needs: ci-test
    if: ${{ always() }}
    steps:
    - name: Inform the Codemonkeys
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            username: 'action-slack',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ needs.ci-test.result }}' === 'success' ? 'good' : '${{ needs.ci-test.result }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_REPO}@${process.env.AS_REF}\n ${process.env.AS_WORKFLOW} (${process.env.AS_COMMIT})\n by ${process.env.AS_AUTHOR}\n Status: ${{ needs.ci-test.result }}`,
            }]
          }
      env:
        GITHUB_TOKEN: ${{ github.token }} # required
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        MATRIX_CONTEXT: ${{ toJson(matrix) }} # required

  dependabot-auto-merge:
    runs-on: ubuntu-latest
    needs: ci-test
    if: ${{ needs.ci-test.result == 'success' }}
    steps:
      - name: Automerge passing dependabot PR
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: dependabot  # For clarity only. dependabot is default.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
