# The following settings determine which data is loaded by ferc1_to_sqlite.py

# You can create several different settings files if you wish, and specify
# which one the initialization script uses on the command line:

# ./ferc1_to_sqlite.py custom_settings.yml

# These settings load a maximal set of data from FERC Form 1 into a locally
# accessible sqlite database. The only tables excluded are:
#  - f1_footnote_tbl
#  - f1_footnote_data
#  - f1_note_fin_stmnt
# These tables are excluded because they contain primarily binary data that
# is not easily parsed, and they also make up ~90% of the database, in
# terms of disk space.

# if you are loading ferc1, you need to specify a reference year. This is the
# year whose database structure is used as a template.
ferc1_to_sqlite_refyear: 2019

# What years of original FERC data should be cloned into the SQLite DB? The
# current digital reporting regime began in 1994. FERC typically releases
# new annual data in the fall of the following year:
ferc1_to_sqlite_years: [
    1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
    2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
    2014, 2015, 2016, 2017, 2018, 2019,
]

# A list of tables to be loaded into the local SQLite database. These are
# the table names as they appear in the 2015 FERC Form 1 database:
ferc1_to_sqlite_tables: [
    f1_respondent_id,
    f1_acb_epda,
    f1_accumdepr_prvsn,
    f1_accumdfrrdtaxcr,
    f1_adit_190_detail,
    f1_adit_190_notes,
    f1_adit_amrt_prop,
    f1_adit_other,
    f1_adit_other_prop,
    f1_allowances,
    f1_bal_sheet_cr,
    f1_capital_stock,
    f1_cash_flow,
    f1_cmmn_utlty_p_e,
    f1_comp_balance_db,
    f1_construction,
    f1_control_respdnt,
    f1_co_directors,
    f1_cptl_stk_expns,
    f1_csscslc_pcsircs,
    f1_dacs_epda,
    f1_dscnt_cptl_stk,
    f1_edcfu_epda,
    f1_elctrc_erg_acct,
    f1_elctrc_oper_rev,
    f1_elc_oper_rev_nb,
    f1_elc_op_mnt_expn,
    f1_electric,
    f1_envrnmntl_expns,
    f1_envrnmntl_fclty,
    f1_fuel,
    f1_general_info,
    f1_gnrt_plant,
    f1_important_chg,
    f1_incm_stmnt_2,
    f1_income_stmnt,
    f1_miscgen_expnelc,
    f1_misc_dfrrd_dr,
    f1_mthly_peak_otpt,
    f1_mtrl_spply,
    f1_nbr_elc_deptemp,
    f1_nonutility_prop,
    f1_nuclear_fuel,
    f1_officers_co,
    f1_othr_dfrrd_cr,
    f1_othr_pd_in_cptl,
    f1_othr_reg_assets,
    f1_othr_reg_liab,
    f1_overhead,
    f1_pccidica,
    f1_plant_in_srvce,
    f1_pumped_storage,
    f1_purchased_pwr,
    f1_reconrpt_netinc,
    f1_reg_comm_expn,
    f1_respdnt_control,
    f1_retained_erng,
    f1_r_d_demo_actvty,
    f1_sales_by_sched,
    f1_sale_for_resale,
    f1_sbsdry_totals,
    f1_schedules_list,
    f1_security_holder,
    f1_slry_wg_dstrbtn,
    f1_substations,
    f1_taxacc_ppchrgyr,
    f1_unrcvrd_cost,
    f1_utltyplnt_smmry,
    f1_work,
    f1_xmssn_adds,
    f1_xmssn_elc_bothr,
    f1_xmssn_elc_fothr,
    f1_xmssn_line,
    f1_xtraordnry_loss,
    f1_codes_val,
    f1_sched_lit_tbl,
    f1_audit_log,
    f1_col_lit_tbl,
    f1_load_file_names,
    f1_privilege,
    f1_sys_error_log,
    f1_unique_num_val,
    f1_row_lit_tbl,
    f1_hydro,
    f1_ident_attsttn,
    f1_steam,
    f1_leased,
    f1_sbsdry_detail,
    f1_plant,
    f1_long_term_debt,
    f1_106_2009,
    f1_106a_2009,
    f1_106b_2009,
    f1_208_elc_dep,
    f1_231_trn_stdycst,
    f1_324_elc_expns,
    f1_325_elc_cust,
    f1_331_transiso,
    f1_338_dep_depl,
    f1_397_isorto_stl,
    f1_398_ancl_ps,
    f1_399_mth_peak,
    f1_400_sys_peak,
    f1_400a_iso_peak,
    f1_429_trans_aff,
    f1_allowances_nox,
    f1_cmpinc_hedge_a,
    f1_cmpinc_hedge,
    f1_email,
    f1_rg_trn_srv_rev,
    f1_s0_checks,
    f1_s0_filing_log,
    f1_security,
#   f1_note_fin_stmnt, # Huge junk table, 52% of the data by MB
#   f1_footnote_tbl,   # Huge junk table, 37% of DB
#   f1_footnote_data,  # Only useful with f1_footnote_tbl
#   f1_pins,    # private database table, not publicly distributed
#   f1_freeze,  # private database table, not publicly distributed
]

# Occasionally it is useful to be able to exclude certain table/column combos
# from being transferred from the DBF to SQLite database. E.g. bad data types.
# These can be specified in this list of (table, column) string pairs.
ferc1_to_sqlite_bad_cols: []
#ferc1_dbf_bad_cols: [
#    [bad_table_1, bad_column_1],
#    [bad_table_2, bad_column_2],
#]
